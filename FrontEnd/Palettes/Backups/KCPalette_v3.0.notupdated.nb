(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     10575,        259]
NotebookOptionsPosition[       718,         23]
NotebookOutlinePosition[     10625,        261]
CellTagsIndexPosition[     10582,        258]
WindowTitle->KCPalette_v3.0
WindowFrame->Palette*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["ReplaceAll[1, KnoxPackages`KCPalette`Private`$tabRules]", "Input",ExpressionUUID->"702d91bd-1f99-462c-8ee9-938f642550e4"]
},
ClosingAutoSave->True,
Editable->False,
Saveable->True,
WindowToolbars->{},
WindowSize->{145, 460},
WindowMargins->{{Automatic, -200}, {16, Automatic}},
WindowFrame->"Palette",
WindowElements->{"VerticalScrollBar"},
WindowFrameElements->{"CloseBox", "ResizeArea"},
WindowClickSelect->False,
WindowTitle->"KCPalette_v3.0",
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
         DynamicBox[
          ToBoxes[
           Graphics[{
             Directive[
              EdgeForm[
               GrayLevel[0.7]], 
              Thickness[Large]], 
             RGBColor[0, 0, 0.258824], 
             Polygon[{{-1, 0}, {-0.9, 0.3}, {0.9, 0.3}, {1, 0}}], 
             Text[
              Style["Styles", 
               If[CurrentValue[
                  ButtonNotebook[], {TaggingRules, "TabValue"}] === 1, 
                Apply[Sequence, {8.3, Bold, 
                  GrayLevel[1]}], 
                Apply[Sequence, {8, 
                  GrayLevel[0.9]}]]], {0, 0.15}, BaseStyle -> "Control"]}, 
            ImageMargins -> None, ImagePadding -> 0, 
            ImageSize -> {70, Automatic}, PlotRangePadding -> None], 
           StandardForm], TrackedSymbols :> {
            CurrentValue[
             ButtonNotebook[], {TaggingRules, "TabValue"}]}], 
         ButtonFunction :> (CurrentValue[
             ButtonNotebook[], {TaggingRules, "TabValue"}] = 1; SelectionMove[
            ButtonNotebook[], All, Notebook, AutoScroll -> False]; 
          NotebookWrite[
            ButtonNotebook[], 
            ReplaceAll[1, KnoxPackages`KCPalette`Private`$tabRules], 
            AutoScroll -> False]; SelectionMove[
            ButtonNotebook[], Previous, Cell, AutoScroll -> False]), 
         Appearance -> None, Method -> "Preemptive", Evaluator -> Automatic], 
        ButtonBox[
         DynamicBox[
          ToBoxes[
           Graphics[{
             Directive[
              EdgeForm[
               GrayLevel[0.7]], 
              Thickness[Large]], 
             RGBColor[0.0541238, 0.217197, 0.109926], 
             Polygon[{{-1, 0}, {-0.9, 0.3}, {0.9, 0.3}, {1, 0}}], 
             Text[
              Style["Typesetting", 
               If[CurrentValue[
                  ButtonNotebook[], {TaggingRules, "TabValue"}] === 2, 
                Apply[Sequence, {8.3, Bold, 
                  GrayLevel[1]}], 
                Apply[Sequence, {8, 
                  GrayLevel[0.9]}]]], {0, 0.15}, BaseStyle -> "Control"]}, 
            ImageMargins -> None, ImagePadding -> 0, 
            ImageSize -> {70, Automatic}, PlotRangePadding -> None], 
           StandardForm], TrackedSymbols :> {
            CurrentValue[
             ButtonNotebook[], {TaggingRules, "TabValue"}]}], 
         ButtonFunction :> (CurrentValue[
             ButtonNotebook[], {TaggingRules, "TabValue"}] = 2; SelectionMove[
            ButtonNotebook[], All, Notebook, AutoScroll -> False]; 
          NotebookWrite[
            ButtonNotebook[], 
            ReplaceAll[2, KnoxPackages`KCPalette`Private`$tabRules], 
            AutoScroll -> False]; SelectionMove[
            ButtonNotebook[], Previous, Cell, AutoScroll -> False]), 
         Appearance -> None, Method -> "Preemptive", Evaluator -> 
         Automatic]}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], "Grid"]], 
   "DockedCell", CellFrameMargins -> {{0, 0}, {-1, 0}}, 
   CellSize -> {Automatic, 25}, Background -> GrayLevel[0]]},
ScrollingOptions->{"VerticalScrollRange"->Fit},
ShowCellBracket->False,
ShowGroupOpener->False,
CellMargins->0,
Deployed->False,
CellOpen->True,
TaggingRules->{
 "ColorToggler" -> False, "StylesheetStyleToggler" -> False, 
  "GradingStyleToggler" -> True, "TypeStyleToggler" -> True, "NewUserToggler" -> 
  False, "TabValue" -> 1},
ShowCellLabel->False,
ShowCellTags->False,
ContextMenu->{},
ComponentwiseContextMenu->{},
ShowAutoStyles->False,
ShowSyntaxStyles->False,
ShowStringCharacters->False,
ImageMargins->0,
Background->Dynamic[
  If[CurrentValue[
     EvaluationNotebook[], {TaggingRules, "TabValue"}] === 1, 
   RGBColor[0, 0, 0.258824], 
   RGBColor[0.0541238, 0.217197, 0.109926]]],
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Parent", "Section"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Button Styles", "Section"], 
      Cell[
       StyleData["Button"], StyleMenuListing -> None, ButtonStyleMenuListing -> 
       None, FontFamily -> "Times", FontSize -> 12, FontColor -> GrayLevel[0],
        ButtonBoxOptions -> {
        Appearance -> {Automatic, "FramedPalette"}, Evaluator -> None, Method -> 
         "Preemptive"}], 
      Cell[
       StyleData["PasteCellsButton", StyleDefinitions -> StyleData["Button"]],
        StyleMenuListing -> None, ButtonStyleMenuListing -> None, 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEnd`FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], #], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], Previous, Cell], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, CellContents]}]& ), Evaluator -> 
         None, Method -> "Preemptive"}], 
      Cell[
       StyleData["PasteExprButton", StyleDefinitions -> StyleData["Button"]], 
       StyleMenuListing -> None, ButtonStyleMenuListing -> None, 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEnd`FrontEndExecute[{
            FrontEnd`NotebookApply[
             FrontEnd`InputNotebook[], #, Placeholder]}]& ), Evaluator -> 
         None, Method -> "Preemptive"}], 
      Cell[
       StyleData["PasteStyleButton", StyleDefinitions -> StyleData["Button"]],
        StyleMenuListing -> None, ButtonStyleMenuListing -> None, 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEnd`FrontEndExecute[{
            FrontEnd`FrontEndToken[
             FrontEnd`InputNotebook[], "Style", #]}]& ), Evaluator -> None, 
         Method -> "Preemptive"}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Button Grid Styles", "Section"], 
      Cell[
       StyleData["ButtonGrid"], CellFrameMargins -> {{0, 0}, {0, 0}}, 
       StyleMenuListing -> None, 
       GridBoxOptions -> {
        ColumnsEqual -> True, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
         GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, RowsEqual -> 
         True}], 
      Cell[
       StyleData["1ButtonGrid", StyleDefinitions -> StyleData["ButtonGrid"]], 
       StyleMenuListing -> None, 
       GridBoxOptions -> {GridBoxItemSize -> {"Columns" -> {{
              Scaled[1]}}}}], 
      Cell[
       StyleData["2ButtonGrid", StyleDefinitions -> StyleData["ButtonGrid"]], 
       StyleMenuListing -> None, 
       GridBoxOptions -> {GridBoxItemSize -> {"Columns" -> {{
              Scaled[0.5]}}}}], 
      Cell[
       StyleData["3ButtonGrid", StyleDefinitions -> StyleData["ButtonGrid"]], 
       StyleMenuListing -> None, 
       GridBoxOptions -> {GridBoxItemSize -> {"Columns" -> {{
              Scaled[0.3333]}}}}], 
      Cell[
       StyleData["4ButtonGrid", StyleDefinitions -> StyleData["ButtonGrid"]], 
       StyleMenuListing -> None, 
       GridBoxOptions -> {GridBoxItemSize -> {"Columns" -> {{
              Scaled[0.25]}}}}], 
      Cell[
       StyleData["5ButtonGrid", StyleDefinitions -> StyleData["ButtonGrid"]], 
       StyleMenuListing -> None, 
       GridBoxOptions -> {GridBoxItemSize -> {"Columns" -> {{
              Scaled[0.2]}}}}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Control Grid", "Section"], 
      Cell[
       StyleData["Control"], StyleMenuListing -> None, FontFamily -> 
       "BitStreamCharter", FontSize -> 10, FontColor -> GrayLevel[0]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell["Cells", "Section"], 
      Cell[
       StyleData["Cell"], CellFrameColor -> RGBColor[0.827, 0.816, 0.784], 
       StyleMenuListing -> None, Background -> GrayLevel[1]], 
      Cell[
       StyleData["TopBorder", StyleDefinitions -> StyleData["Cell"]], 
       CellFrame -> {{1, 1}, {0, 1}}, CellMargins -> {{2, 2}, {0, 1}}, 
       CellFrameMargins -> {{0, 0}, {-9, 0}}, CellSize -> {Automatic, 12}, 
       StyleMenuListing -> None], 
      Cell[
       StyleData["BottomBorder", StyleDefinitions -> StyleData["Cell"]], 
       CellFrame -> {{1, 1}, {2, 0}}, CellMargins -> {{2, 2}, {1, 0}}, 
       CellFrameMargins -> {{0, 0}, {0, -9}}, CellSize -> {Automatic, 5}, 
       StyleMenuListing -> None], 
      Cell[
       StyleData["FrameCell", StyleDefinitions -> StyleData["Cell"]], 
       CellFrame -> {{1, 1}, {0, 0}}, CellMargins -> {{2, 2}, {0, 0}}, 
       CellFrameMargins -> {{5, 1}, {1, 1}}, StyleMenuListing -> None], 
      Cell[
       StyleData["Group", StyleDefinitions -> StyleData["FrameCell"]], 
       CellFrameMargins -> {{5, 1}, {5, 1}}, TextAlignment -> Center, 
       StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 14, 
       FontWeight -> Bold, FontColor -> GrayLevel[0.3]], 
      Cell[
       StyleData["Spacer"], CellMargins -> {{5, 5}, {0, 2}}, 
       CellFrameMargins -> {{0, 0}, {0, 0}}, CellSize -> {Automatic, 12}, 
       StyleMenuListing -> None]}, Closed]]}, Visible -> False, 
  FrontEndVersion -> 
  "11.2 for Microsoft Windows (64-bit) (September 10, 2017)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
KnoxPackages`KCPalette`Private`WholeCellGroupOpener -> False
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[587, 21, 127, 0, 28, "Input",ExpressionUUID->"702d91bd-1f99-462c-8ee9-938f642550e4"]
}
]
*)

