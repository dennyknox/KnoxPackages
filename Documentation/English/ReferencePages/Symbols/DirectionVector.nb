(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     42015,        812]
NotebookOptionsPosition[     38353,        724]
NotebookOutlinePosition[     41043,        791]
CellTagsIndexPosition[     40923,        785]
WindowTitle->DirectionVector
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["KNOX PACKAGES SYMBOL", "PacletNameCell",ExpressionUUID->
     "aa80d7ac-440e-4104-b62a-8f291a9e0d92"], Cell[TextData[Cell[BoxData[
     ActionMenuBox[
      FrameBox[
       InterpretationBox[Cell[TextData[{
         "URL",
         StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
          StripOnInput->False]
        }],ExpressionUUID->"5e682740-b815-4b56-949a-a8b166ca8d25"],
        TextCell[
         Row[{"URL", 
           Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
       StripOnInput->False], {"\<\"KnoxPackages/ref/DirectionVector\"\>":>
      None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell["KnoxPackages/ref/DirectionVector"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; Null], 
      Delimiter, "\<\"Copy web URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell[
             BoxData[
              MakeBoxes[
               Hyperlink[
               "http://reference.wolfram.com/language/KnoxPackages/ref/\
DirectionVector.html"], StandardForm]], "Input", TextClipboardType -> 
             "PlainText"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; 
       Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
        NotebookLocate[{
          URL[
           StringJoin[
            If[
             TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$56137], 
             "http://reference.wolfram.com/system-modeler/", 
             "http://reference.wolfram.com/language/"], 
            "KnoxPackages/ref/DirectionVector", ".html"]], None}]}]},
      Appearance->None,
      MenuAppearance->Automatic,
      MenuStyle->"URLMenu"]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "fc8933c6-883d-4b92-807f-5909fdf5b579"]], "AnchorBar",ExpressionUUID->
     "6ceae718-2df2-4436-ae70-857cff1ad116"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"8e536d0d-07e4-4989-a23b-f7f6ef7c5753"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["DirectionVector", "ObjectName",ExpressionUUID->
  "7f0a10c3-8e59-4aba-859c-63b93dfc18f9"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]],ExpressionUUID->"52986bed-ece8-4bd4-8b9f-2321914c5a38"],
 Cell[BoxData[
 ""], "ObjectNameTranslation",ExpressionUUID->
  "6a342b82-7b89-447a-b82c-5f172ad65dda"]
}], "ObjectNameGrid",ExpressionUUID->"6879e0a9-93ad-42f4-bfb6-60af4b953fa4"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
     "DirectionVector"], "InlineFormula",ExpressionUUID->
      "a3dc394f-7c2a-4335-8886-e8abedc6727e"],
     "\[LineSeparator]an option for ",
     Cell[BoxData[
     "PlotDirectionalDerivative"], "InlineFormula",ExpressionUUID->
      "2af11613-aacf-44c7-a62e-a9a2dd75e1ba"],
     ". Setting ",
     Cell[BoxData[
      RowBox[{"DirectionVector", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["a", "1"], ",", 
           SubscriptBox["b", "1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["a", "2"], ",", 
           SubscriptBox["b", "2"]}], "}"}], ",", "\[Ellipsis]"}], "}"}]}]], 
      "InlineFormula",ExpressionUUID->"d53e7def-936b-47d6-a292-18e2ab5c42b4"],
     " specifies that the directional derivative should be computed in the \
directions ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["a", "1"], ",", 
         SubscriptBox["b", "1"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["a", "2"], ",", 
         SubscriptBox["b", "2"]}], "}"}], ",", "\[Ellipsis]"}]], 
      "InlineFormula",ExpressionUUID->"a7c3260c-9dd2-4071-a1fe-d11d9523c4b4"],
     ". The vectors ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["a", "1"], ",", 
         SubscriptBox["b", "1"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["a", "2"], ",", 
         SubscriptBox["b", "2"]}], "}"}], ",", "\[Ellipsis]"}]], 
      "InlineFormula",ExpressionUUID->"07bd0e86-3215-4f3f-84b6-4be184130c71"],
     " need not be a unit vector - they will be normalized."
    }],ExpressionUUID->"ef84f459-520b-40fb-b571-ea3c635638ec"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}},
 CellID->982511436,ExpressionUUID->"b1d8a8e4-f183-4b23-acb6-874d41cb9e5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"0b4bf07f-ad80-4de6-a2dc-ca55db0cc99b"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "dc9a85a3-0447-4e65-bc34-ad4f938dfea2"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->453592641,ExpressionUUID->"057b715c-9088-4a5e-8501-4402f757e5ba"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "223a1f05-5caa-49a0-9ae9-46d6c4854c32"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->212717908,ExpressionUUID->"e349c253-f452-4eda-8910-653550f862bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<KnoxPackages`Calculus`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDirectionalDerivative", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"x", " ", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{".9", ",", "1"}], "}"}], ",", 
   RowBox[{"DirectionVector", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->113728936,ExpressionUUID->"ccb01679-3281-4b0d-9928-caa0b9c3287e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Bzzn66Y=
    "], {{0, 240}, {228, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{228, 240},
  PlotRange->{{0, 228}, {0, 240}}]], "Output",
 ImageSize->{232, 240},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->249584761,ExpressionUUID->"5a166108-ed85-486d-90c9-8c7d82d524ae"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"a5941bd9-a96d-4dc8-a8c0-1bb91c3ad084"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"DirectionVector",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "KnoxPackages", ButtonData -> 
         "paclet:KnoxPackages/guide/KnoxPackages", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2018, 5, 6, 15, 21, 13.7274602}", 
    "history" -> {"1.0", "", "", ""}, "context" -> "KnoxPackages`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Knox Packages Symbol", "language" -> "en", "paclet" -> "KnoxPackages", 
    "status" -> "None", "summary" -> 
    "DirectionVector an option for PlotDirectionalDerivative. Setting \
DirectionVector -> {{a1, b1}, {a2, b2}, ...} specifies that the directional \
derivative should be computed in the directions {a1, b1}, {a2, b2}, .... The \
vectors {a1, b1}, {a2, b2}, ... need not be a unit vector - they will be \
normalized.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "DirectionVector", "titlemodifier" -> "", "windowtitle" -> 
    "DirectionVector", "type" -> "Symbol", "uri" -> 
    "KnoxPackages/ref/DirectionVector"}, "SearchTextTranslated" -> "", 
  "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  TaggingRules -> {"NewStyles" -> False}, FrontEndVersion -> 
  "11.2 for Microsoft Windows (64-bit) (September 10, 2017)", 
  StyleDefinitions -> "LaTeX_Book_12.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[5731, 152, 435, 11, 35, "PrimaryExamplesSection",ExpressionUUID->"057b715c-9088-4a5e-8501-4402f757e5ba",
   CellTags->"PrimaryExamplesSection",
   CellID->453592641]},
 "RasterizedOutput"->{
  Cell[7322, 203, 30910, 514, 261, "Output",ExpressionUUID->"5a166108-ed85-486d-90c9-8c7d82d524ae",
   CellTags->"RasterizedOutput",
   CellID->249584761]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 40545, 774},
 {"RasterizedOutput", 40743, 778}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[587, 21, 2614, 56, 55, "AnchorBarGrid",ExpressionUUID->"8e536d0d-07e4-4989-a23b-f7f6ef7c5753",
 CellID->1],
Cell[CellGroupData[{
Cell[3226, 81, 400, 9, 52, "ObjectNameGrid",ExpressionUUID->"6879e0a9-93ad-42f4-bfb6-60af4b953fa4"],
Cell[3629, 92, 2065, 55, 150, "Usage",ExpressionUUID->"b1d8a8e4-f183-4b23-acb6-874d41cb9e5d",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[5731, 152, 435, 11, 35, "PrimaryExamplesSection",ExpressionUUID->"057b715c-9088-4a5e-8501-4402f757e5ba",
 CellTags->"PrimaryExamplesSection",
 CellID->453592641],
Cell[CellGroupData[{
Cell[6191, 167, 308, 7, 29, "ExampleSection",ExpressionUUID->"e349c253-f452-4eda-8910-653550f862bb",
 CellID->212717908],
Cell[CellGroupData[{
Cell[6524, 178, 795, 23, 59, "Input",ExpressionUUID->"ccb01679-3281-4b0d-9928-caa0b9c3287e",
 CellID->113728936],
Cell[7322, 203, 30910, 514, 261, "Output",ExpressionUUID->"5a166108-ed85-486d-90c9-8c7d82d524ae",
 CellTags->"RasterizedOutput",
 CellID->249584761]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[38271, 722, 78, 0, 41, "FooterCell",ExpressionUUID->"a5941bd9-a96d-4dc8-a8c0-1bb91c3ad084"]
}
]
*)

(* End of internal cache information *)

